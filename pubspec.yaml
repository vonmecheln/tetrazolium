name: tetrazolium
description: TetrazÃ³lio Digital

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.12.0-29.10.beta <3.0.0"

dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.3 
  
  #responsible for the dependency injection system and route management
  flutter_modular: ^4.5.0
  
  # Maintaining the State with MobXStore (MobX) 
  # egmented State Pattern (SSP)
  mobx_triple: ^1.1.3+1
  flutter_mobx: ^2.0.4

  flutter_triple: ^1.2.7+2

  mobx: ^2.0.6+1
  
  rxdart: ^0.27.1 
  dio: ^4.0.0 
  google_fonts: ^2.3.1
  
  dartz: ^0.10.0
  cloud_firestore: ^3.1.10
  firebase_core: ^1.13.1
  json_annotation : ^4.4.0
  
  async:
  uuid: 3.0.6
  

dev_dependencies:
  modular_codegen: 
  mobx_codegen: 
  build_runner: 
  # flutter_modular_test: 
  flutter_test:
    sdk: flutter
  json_serializable: ^6.1.4
  # triple_test: ^0.0.6 

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/img/
    - assets/w200r/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
vars:
  clean: fvm flutter clean
  pub: fvm flutter pub
  get: fvm flutter pub get
  runner: fvm flutter pub run build_runner
  version: fvm flutter --version
  name: von 
scripts:
  clear: $clean & $pub cache repair & $runner clean
  mobx: $get & $runner watch --delete-conflicting-outputs
  mobb: $get & $runner build --delete-conflicting-outputs
  mobd: $get & $runner build
  mobw: $get & $runner watch
  build_apk: $get & flutter build apk -t lib/main_production.dart --release
  build_apk_qa: $get & flutter build apk --flavor qa -t lib/main_qa.dart --release
  build_apk_prod: $get & flutter build apk --flavor prod -t  ib/main_production.dart --release
  build_ios: $get & flutter build ios -t lib/main_production.dart --flavor prod --release
  build_web: $get & flutter build web -t lib/main_production.dart --release
  localization: dart lib\app\commands\localization.dart
  test: $get
  test_error: $get2
  print: echo $name
  flu: $version
  
  
